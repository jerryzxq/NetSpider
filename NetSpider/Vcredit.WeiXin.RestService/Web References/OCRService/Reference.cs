//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18444 版自动生成。
// 
#pragma warning disable 1591

namespace Vcredit.WeiXin.RestService.OCRService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="OCRServiceSoap", Namespace="http://tempuri.org/")]
    public partial class OCRService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RecognizeIdentityCardByBytesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecognizeIdentityCardByUrlOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public OCRService() {
            this.Url = global::Vcredit.WeiXin.RestService.Properties.Settings.Default.Vcredit_WeiXin_RestService_OCRService_OCRService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RecognizeIdentityCardByBytesCompletedEventHandler RecognizeIdentityCardByBytesCompleted;
        
        /// <remarks/>
        public event RecognizeIdentityCardByUrlCompletedEventHandler RecognizeIdentityCardByUrlCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecognizeIdentityCardByBytes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IdentityCard RecognizeIdentityCardByBytes([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bytes) {
            object[] results = this.Invoke("RecognizeIdentityCardByBytes", new object[] {
                        bytes});
            return ((IdentityCard)(results[0]));
        }
        
        /// <remarks/>
        public void RecognizeIdentityCardByBytesAsync(byte[] bytes) {
            this.RecognizeIdentityCardByBytesAsync(bytes, null);
        }
        
        /// <remarks/>
        public void RecognizeIdentityCardByBytesAsync(byte[] bytes, object userState) {
            if ((this.RecognizeIdentityCardByBytesOperationCompleted == null)) {
                this.RecognizeIdentityCardByBytesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecognizeIdentityCardByBytesOperationCompleted);
            }
            this.InvokeAsync("RecognizeIdentityCardByBytes", new object[] {
                        bytes}, this.RecognizeIdentityCardByBytesOperationCompleted, userState);
        }
        
        private void OnRecognizeIdentityCardByBytesOperationCompleted(object arg) {
            if ((this.RecognizeIdentityCardByBytesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecognizeIdentityCardByBytesCompleted(this, new RecognizeIdentityCardByBytesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecognizeIdentityCardByUrl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IdentityCard RecognizeIdentityCardByUrl(string imageUrl) {
            object[] results = this.Invoke("RecognizeIdentityCardByUrl", new object[] {
                        imageUrl});
            return ((IdentityCard)(results[0]));
        }
        
        /// <remarks/>
        public void RecognizeIdentityCardByUrlAsync(string imageUrl) {
            this.RecognizeIdentityCardByUrlAsync(imageUrl, null);
        }
        
        /// <remarks/>
        public void RecognizeIdentityCardByUrlAsync(string imageUrl, object userState) {
            if ((this.RecognizeIdentityCardByUrlOperationCompleted == null)) {
                this.RecognizeIdentityCardByUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecognizeIdentityCardByUrlOperationCompleted);
            }
            this.InvokeAsync("RecognizeIdentityCardByUrl", new object[] {
                        imageUrl}, this.RecognizeIdentityCardByUrlOperationCompleted, userState);
        }
        
        private void OnRecognizeIdentityCardByUrlOperationCompleted(object arg) {
            if ((this.RecognizeIdentityCardByUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecognizeIdentityCardByUrlCompleted(this, new RecognizeIdentityCardByUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class IdentityCard {
        
        private int statusCodeField;
        
        private string statusDescriptionField;
        
        private string nameField;
        
        private string cardNoField;
        
        private string sexField;
        
        private string birthdayField;
        
        private string addressField;
        
        private string folkField;
        
        private string issueAuthorityField;
        
        private string validPeriodField;
        
        /// <remarks/>
        public int StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string StatusDescription {
            get {
                return this.statusDescriptionField;
            }
            set {
                this.statusDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string CardNo {
            get {
                return this.cardNoField;
            }
            set {
                this.cardNoField = value;
            }
        }
        
        /// <remarks/>
        public string Sex {
            get {
                return this.sexField;
            }
            set {
                this.sexField = value;
            }
        }
        
        /// <remarks/>
        public string Birthday {
            get {
                return this.birthdayField;
            }
            set {
                this.birthdayField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Folk {
            get {
                return this.folkField;
            }
            set {
                this.folkField = value;
            }
        }
        
        /// <remarks/>
        public string IssueAuthority {
            get {
                return this.issueAuthorityField;
            }
            set {
                this.issueAuthorityField = value;
            }
        }
        
        /// <remarks/>
        public string ValidPeriod {
            get {
                return this.validPeriodField;
            }
            set {
                this.validPeriodField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RecognizeIdentityCardByBytesCompletedEventHandler(object sender, RecognizeIdentityCardByBytesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecognizeIdentityCardByBytesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecognizeIdentityCardByBytesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IdentityCard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IdentityCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RecognizeIdentityCardByUrlCompletedEventHandler(object sender, RecognizeIdentityCardByUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecognizeIdentityCardByUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecognizeIdentityCardByUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IdentityCard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IdentityCard)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591